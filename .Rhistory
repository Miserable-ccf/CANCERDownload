}
gene <- gene[gene %in% rownames(count@count)]
CoxSingle(clinical,count@count,gene)
coxMulti_res <- CoxMulti(clinical,count@count, gene)
if(F){
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
}else{
gene <- "METTL3,METTL14,METTL16,WTAP,VIRMA,RBM15,RBM15B,ZC3H13,FTO,ALKBH5,YTHDC1,YTHDC2,IGF2BP1,IGF2B,P2,IGF2BP3,YTHDF1,YTHDF2,YTHDF3,HNRNPC,HNRNPA2B1,RBMX"
gene <- strsplit(gene,split = ",")[[1]]
}
gene <- gene[gene %in% rownames(count@count)]
CoxSingle(clinical,count@count,gene)
coxMulti_res <- CoxMulti(clinical,count@count, gene)
data <- clinical_count(clinical = clinical,count = count,symbol=gene)
gene <- make.names(gene)
colnames(data) <- make.names(colnames(data))
clinical <- getClinical(project)
count <- getCount(project)
count <- count@count
deg <- DeSeq2Analysis(count,project = project)
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
cutoff=0.05
if(F){
clinical <- getClinical(project)
count <- getCount(project)
count <- count@count
deg <- DeSeq2Analysis(count,project = project)
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
cutoff=0.05
}
data <- clinical_count(clinical = clinical,count = count,symbol=gene)
gene <- make.names(gene)
colnames(data) <- make.names(colnames(data))
coxSingle <- CoxSingle_(data,gene)%>%
filter(pvalue<cutoff)
gene <- coxSingle$id
formula <-as.formula(paste0("Surv(futime_year,fustat)~",paste0(gene,collapse = "+")))
cox <- coxph(formula,data=data)
coxSummary <- summary(cox)
outTab <- data.frame()
outTab <- rbind(outTab,cbind(HR=coxSummary$conf.int[,"exp(coef)"],
HR.95L=coxSummary$conf.int[,"lower .95"],
HR.95H=coxSummary$conf.int[,"upper .95"],
pvalue=coxSummary$coefficients[,"Pr(>|z|)"]))
riskScore <- predict(cox,type = "risk",newdata = data)
res_data<- data%>%
mutate(
riskScoreNum=riskScore,
riskScore = as.vector(ifelse(riskScore>median(riskScore),"high","low")))%>%
dplyr::select(c("TCGA_full_id","futime","futime_year","fustat","riskScoreNum","riskScore"))
coxMulti <- new("CoxMulti",single=coxSingle,multi=outTab,data=res_data)
return(coxMulti)
library(survivalROC)
library(survival)
library(survminer)
library(lattice)
library(DESeq2)
library(TCGAbiolinks)
library(tidyverse)
library(CANCERDownload)
project <-   "TCGA-COAD"
count <- getCount(project)
clinical <- getClinical(project)
miRNACount <- getmiRNACount(project)
clinical_count <- clinical_count(clinical,count@count)
deg <- DeSeq2Analysis(count,project = project)
lnRAN_mRNA_res <- lnRAN_mRNA(deg)
lnRAN_mRNA_res@lnRNA
lnRAN_mRNA_res@mRNA
lnRAN_mRNA_count_res <- lnRAN_mRNA(count)
lnRAN_mRNA_count_res@lnRNA
if(F){
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
}else{
gene <- "METTL3,METTL14,METTL16,WTAP,VIRMA,RBM15,RBM15B,ZC3H13,FTO,ALKBH5,YTHDC1,YTHDC2,IGF2BP1,IGF2B,P2,IGF2BP3,YTHDF1,YTHDF2,YTHDF3,HNRNPC,HNRNPA2B1,RBMX"
gene <- strsplit(gene,split = ",")[[1]]
}
gene <- gene[gene %in% rownames(count@count)]
CoxSingle(clinical,count@count,gene)
coxMulti_res <- CoxMulti(clinical,count@count, gene)
gene
CoxSingle(clinical,count@count,gene)
gene
coxMulti_res <- CoxMulti(clinical,count@count, gene)
#' CoxMulti
#' @export
CoxMulti <- function(clinical,count,gene,cutoff=0.05){
if(F){
clinical <- getClinical(project)
count <- getCount(project)
count <- count@count
deg <- DeSeq2Analysis(count,project = project)
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
cutoff=0.05
}
data <- clinical_count(clinical = clinical,count = count,symbol=gene)
#gene <- make.names(gene)
#colnames(data) <- make.names(colnames(data))
coxSingle <- CoxSingle_(data,gene)%>%
filter(pvalue<cutoff)
gene <- coxSingle$id
formula <-as.formula(paste0("Surv(futime_year,fustat)~",paste0(gene,collapse = "+")))
cox <- coxph(formula,data=data)
coxSummary <- summary(cox)
outTab <- data.frame()
outTab <- rbind(outTab,cbind(HR=coxSummary$conf.int[,"exp(coef)"],
HR.95L=coxSummary$conf.int[,"lower .95"],
HR.95H=coxSummary$conf.int[,"upper .95"],
pvalue=coxSummary$coefficients[,"Pr(>|z|)"]))
riskScore <- predict(cox,type = "risk",newdata = data)
res_data<- data%>%
mutate(
riskScoreNum=riskScore,
riskScore = as.vector(ifelse(riskScore>median(riskScore),"high","low")))%>%
dplyr::select(c("TCGA_full_id","futime","futime_year","fustat","riskScoreNum","riskScore"))
if(F){
## 生存曲线
fit <- surv_fit(Surv(futime_year,fustat) ~ riskScore, data = res_data)
res <- ggsurvplot(fit, pval=T, risk.table=F,
risk.table.height = 0.3,data = res_data)
print(res)
## ROC曲线
roc <- survivalROC(Stime=res_data$futime_year ,status=res_data$fustat,marker=res_data$riskScoreNum,
predict.time=3,method="KM")
library(lattice)
res <- xyplot(TP~FP,roc,main=paste("ROC curve(","AUC=",round(roc$AUC,3),")"),
xlab="False postive rate",ylab="True positive rate",panel = function(x,y){
panel.xyplot(x,y,type="l",lwd=2,cex.main=1.3,cex.lab=1.2,cex.axis=1.2,font=1.2,col="red")
panel.abline(c(0,1))
})
print(res)
}
coxMulti <- new("CoxMulti",single=coxSingle,multi=outTab,data=res_data)
return(coxMulti)
}
coxMulti_res <- CoxMulti(clinical,count@count, gene)
library(survivalROC)
library(survival)
library(survminer)
library(lattice)
library(DESeq2)
library(TCGAbiolinks)
library(tidyverse)
library(CANCERDownload)
project <-   "TCGA-COAD"
count <- getCount(project)
clinical <- getClinical(project)
miRNACount <- getmiRNACount(project)
clinical_count <- clinical_count(clinical,count@count)
deg <- DeSeq2Analysis(count,project = project)
lnRAN_mRNA_res <- lnRAN_mRNA(deg)
lnRAN_mRNA_res@mRNA
lnRAN_mRNA_res@lnRNA
lnRAN_mRNA_count_res <- lnRAN_mRNA(count)
lnRAN_mRNA_count_res@lnRNA
if(F){
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
}else{
gene <- "METTL3,METTL14,METTL16,WTAP,VIRMA,RBM15,RBM15B,ZC3H13,FTO,ALKBH5,YTHDC1,YTHDC2,IGF2BP1,IGF2B,P2,IGF2BP3,YTHDF1,YTHDF2,YTHDF3,HNRNPC,HNRNPA2B1,RBMX"
gene <- strsplit(gene,split = ",")[[1]]
}
gene <- gene[gene %in% rownames(count@count)]
CoxSingle(clinical,count@count,gene)
coxMulti_res <- CoxMulti(clinical,count@count, gene)
gene
gene <- gene[gene %in% rownames(count@count)]
CoxSingle(clinical,count@count,gene)
coxMulti_res <- CoxMulti(clinical,count@count, gene)
clinical <- getClinical(project)
count <- getCount(project)
count <- count@count
deg <- DeSeq2Analysis(count,project = project)
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
cutoff=0.05
data <- clinical_count(clinical = clinical,count = count,symbol=gene)
gene <- make.names(gene)
colnames(data) <- make.names(colnames(data))
coxSingle <- CoxSingle_(data,gene)%>%
filter(pvalue<cutoff)
gene <- coxSingle$id
formula <-as.formula(paste0("Surv(futime_year,fustat)~",paste0(gene,collapse = "+")))
library(survivalROC)
library(survival)
library(survminer)
library(lattice)
library(DESeq2)
library(TCGAbiolinks)
library(tidyverse)
library(CANCERDownload)
project <-   "TCGA-COAD"
count <- getCount(project)
clinical <- getClinical(project)
miRNACount <- getmiRNACount(project)
clinical_count <- clinical_count(clinical,count@count)
deg <- DeSeq2Analysis(count,project = project)
lnRAN_mRNA_res <- lnRAN_mRNA(deg)
lnRAN_mRNA_res@lnRNA
lnRAN_mRNA_res@mRNA
lnRAN_mRNA_count_res <- lnRAN_mRNA(count)
lnRAN_mRNA_count_res@lnRNA
if(F){
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
}else{
gene <- "METTL3,METTL14,METTL16,WTAP,VIRMA,RBM15,RBM15B,ZC3H13,FTO,ALKBH5,YTHDC1,YTHDC2,IGF2BP1,IGF2B,P2,IGF2BP3,YTHDF1,YTHDF2,YTHDF3,HNRNPC,HNRNPA2B1,RBMX"
gene <- strsplit(gene,split = ",")[[1]]
}
gene <- gene[gene %in% rownames(count@count)]
CoxSingle(clinical,count@count,gene)
coxMulti_res <- CoxMulti(clinical,count@count, gene)
gene
if(F){
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
}else{
gene <- "METTL3,METTL14,METTL16,WTAP,VIRMA,RBM15,RBM15B,ZC3H13,FTO,ALKBH5,YTHDC1,YTHDC2,IGF2BP1,IGF2B,P2,IGF2BP3,YTHDF1,YTHDF2,YTHDF3,HNRNPC,HNRNPA2B1,RBMX"
gene <- strsplit(gene,split = ",")[[1]]
}
gene <- gene[gene %in% rownames(count@count)]
CoxSingle(clinical,count@count,gene)
coxMulti_res <- CoxMulti(clinical,count@count, gene)
formula <-as.formula(paste0("Surv(futime_year,fustat)~",paste0(gene,collapse = "+")))
formula
class(gene)
library(survivalROC)
library(survival)
library(survminer)
library(lattice)
library(DESeq2)
library(TCGAbiolinks)
library(tidyverse)
library(CANCERDownload)
project <-   "TCGA-COAD"
count <- getCount(project)
clinical <- getClinical(project)
miRNACount <- getmiRNACount(project)
clinical_count <- clinical_count(clinical,count@count)
deg <- DeSeq2Analysis(count,project = project)
lnRAN_mRNA_res <- lnRAN_mRNA(deg)
lnRAN_mRNA_res@lnRNA
lnRAN_mRNA_res@mRNA
lnRAN_mRNA_count_res <- lnRAN_mRNA(count)
lnRAN_mRNA_count_res@lnRNA
if(F){
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
}else{
gene <- "METTL3,METTL14,METTL16,WTAP,VIRMA,RBM15,RBM15B,ZC3H13,FTO,ALKBH5,YTHDC1,YTHDC2,IGF2BP1,IGF2B,P2,IGF2BP3,YTHDF1,YTHDF2,YTHDF3,HNRNPC,HNRNPA2B1,RBMX"
gene <- strsplit(gene,split = ",")[[1]]
}
gene <- gene[gene %in% rownames(count@count)]
CoxSingle(clinical,count@count,gene)
coxMulti_res <- CoxMulti(clinical,count@count, gene)
#' CoxMulti
#' @export
CoxMulti <- function(clinical,count,gene,cutoff=0.05){
if(F){
clinical <- getClinical(project)
count <- getCount(project)
count <- count@count
deg <- DeSeq2Analysis(count,project = project)
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
cutoff=0.05
}
data <- clinical_count(clinical = clinical,count = count,symbol=gene)
gene <- make.names(gene)
colnames(data) <- make.names(colnames(data))
coxSingle <- CoxSingle_(data,gene)%>%
filter(pvalue<cutoff)
gene <- coxSingle$id
formula <-as.formula(paste0("Surv(futime_year,fustat)~",paste0(gene,collapse = "+")))
cox <- coxph(formula,data=data)
coxSummary <- summary(cox)
outTab <- data.frame()
outTab <- rbind(outTab,cbind(HR=coxSummary$conf.int[,"exp(coef)"],
HR.95L=coxSummary$conf.int[,"lower .95"],
HR.95H=coxSummary$conf.int[,"upper .95"],
pvalue=coxSummary$coefficients[,"Pr(>|z|)"]))
riskScore <- predict(cox,type = "risk",newdata = data)
res_data<- data%>%
mutate(
riskScoreNum=riskScore,
riskScore = as.vector(ifelse(riskScore>median(riskScore),"high","low")))%>%
dplyr::select(c("TCGA_full_id","futime","futime_year","fustat","riskScoreNum","riskScore"))
if(F){
## 生存曲线
fit <- surv_fit(Surv(futime_year,fustat) ~ riskScore, data = res_data)
res <- ggsurvplot(fit, pval=T, risk.table=F,
risk.table.height = 0.3,data = res_data)
print(res)
## ROC曲线
roc <- survivalROC(Stime=res_data$futime_year ,status=res_data$fustat,marker=res_data$riskScoreNum,
predict.time=3,method="KM")
library(lattice)
res <- xyplot(TP~FP,roc,main=paste("ROC curve(","AUC=",round(roc$AUC,3),")"),
xlab="False postive rate",ylab="True positive rate",panel = function(x,y){
panel.xyplot(x,y,type="l",lwd=2,cex.main=1.3,cex.lab=1.2,cex.axis=1.2,font=1.2,col="red")
panel.abline(c(0,1))
})
print(res)
}
coxMulti <- new("CoxMulti",single=coxSingle,multi=outTab,data=res_data)
return(coxMulti)
}
#' clinical_count
#' @export
clinical_count <- function(clinical,count,symbol=NULL){
if(is.null(symbol)){
count <- count[1:5,]
}else{
count <- count[symbol,]
}
data <- count%>%
dplyr::select(!matches("TCGA-([A-Z 0-9]*?)-([A-Z 0-9]*?)-(11.*?)-(.*?)"))%>%
t()%>%
as.data.frame()%>%
rownames_to_column("TCGA_full_id")%>%
mutate(patient_id = stringr::str_sub(TCGA_full_id, 1, 12),
tissue_type_id = stringr::str_sub(TCGA_full_id, 14, 15))%>%
left_join(clinical,by="patient_id")
#message(paste0(table(d$tissue_type_id),collapse = ","))
return(data)
}
CoxSingle(clinical,count@count,gene)
coxMulti_res <- CoxMulti(clinical,count@count, gene)
library(survivalROC)
library(survival)
library(survminer)
library(lattice)
library(DESeq2)
library(TCGAbiolinks)
library(tidyverse)
library(CANCERDownload)
project <-   "TCGA-COAD"
count <- getCount(project)
clinical <- getClinical(project)
miRNACount <- getmiRNACount(project)
clinical_count <- clinical_count(clinical,count@count)
deg <- DeSeq2Analysis(count,project = project)
lnRAN_mRNA_res <- lnRAN_mRNA(deg)
lnRAN_mRNA_res@lnRNA
lnRAN_mRNA_res@mRNA
lnRAN_mRNA_count_res <- lnRAN_mRNA(count)
lnRAN_mRNA_count_res@lnRNA
if(F){
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
}else{
gene <- "METTL3,METTL14,METTL16,WTAP,VIRMA,RBM15,RBM15B,ZC3H13,FTO,ALKBH5,YTHDC1,YTHDC2,IGF2BP1,IGF2B,P2,IGF2BP3,YTHDF1,YTHDF2,YTHDF3,HNRNPC,HNRNPA2B1,RBMX"
gene <- strsplit(gene,split = ",")[[1]]
}
gene <- gene[gene %in% rownames(count@count)]
CoxSingle(clinical,count@count,gene)
coxMulti_res <- CoxMulti(clinical,count@count, gene)
gene
gene
clinical <- getClinical(project)
count <- getCount(project)
count <- count@count
deg <- DeSeq2Analysis(count,project = project)
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
cutoff=0.05
data <- clinical_count(clinical = clinical,count = count,symbol=gene)
gene <- make.names(gene)
colnames(data) <- make.names(colnames(data))
coxSingle <- CoxSingle_(data,gene)%>%
filter(pvalue<cutoff)
gene <- coxSingle$id
#' CoxSingle
#' @export
CoxSingle <- function(clinical,count,gene){
outTab <- data.frame()
data <- clinical_count(clinical = clinical,count = count,symbol=gene)
outTab<- CoxSingle_(data,gene)
return(outTab)
}
coxSingle <- CoxSingle_(data,gene)%>%
filter(pvalue<cutoff)
CoxSingle_ <- function(data,gene){
outTab <- data.frame()
for(i in gene){
cox <- coxph(Surv(futime_year,fustat) ~ data[,i],data=data)
coxSummary <- summary(cox)
outTab <- rbind(outTab,cbind(id=i,
HR=coxSummary$conf.int[,"exp(coef)"],
HR.95L=coxSummary$conf.int[,"lower .95"],
HR.95H=coxSummary$conf.int[,"upper .95"],
pvalue=coxSummary$coefficients[,"Pr(>|z|)"]))
}
return(outTab)
}
coxSingle <- CoxSingle_(data,gene)%>%
filter(pvalue<cutoff)
coxSingle
dim(coxSingle)
length(coxSingle$id)
dim(coxSingle)
dim(coxSingle)[0]
dim(coxSingle)[1]
library(CANCERDownload)
library(survivalROC)
library(survival)
library(survminer)
library(lattice)
library(DESeq2)
library(TCGAbiolinks)
library(tidyverse)
library(CANCERDownload)
project <-   "TCGA-COAD"
count <- getCount(project)
clinical <- getClinical(project)
miRNACount <- getmiRNACount(project)
clinical_count <- clinical_count(clinical,count@count)
deg <- DeSeq2Analysis(count,project = project)
lnRAN_mRNA_res <- lnRAN_mRNA(deg)
lnRAN_mRNA_res@lnRNA
lnRAN_mRNA_res@mRNA
lnRAN_mRNA_count_res <- lnRAN_mRNA(count)
lnRAN_mRNA_count_res@lnRNA
if(F){
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
}else{
gene <- "METTL3,METTL14,METTL16,WTAP,VIRMA,RBM15,RBM15B,ZC3H13,FTO,ALKBH5,YTHDC1,YTHDC2,IGF2BP1,IGF2B,P2,IGF2BP3,YTHDF1,YTHDF2,YTHDF3,HNRNPC,HNRNPA2B1,RBMX"
gene <- strsplit(gene,split = ",")[[1]]
}
gene <- gene[gene %in% rownames(count@count)]
CoxSingle(clinical,count@count,gene)
coxMulti_res <- CoxMulti(clinical,count@count, gene)
library(survivalROC)
library(survival)
library(survminer)
library(lattice)
library(DESeq2)
library(TCGAbiolinks)
library(tidyverse)
library(CANCERDownload)
project <-   "TCGA-COAD"
count <- getCount(project)
clinical <- getClinical(project)
miRNACount <- getmiRNACount(project)
clinical_count <- clinical_count(clinical,count@count)
deg <- DeSeq2Analysis(count,project = project)
lnRAN_mRNA_res <- lnRAN_mRNA(deg)
lnRAN_mRNA_res@lnRNA
lnRAN_mRNA_res@mRNA
lnRAN_mRNA_count_res <- lnRAN_mRNA(count)
lnRAN_mRNA_count_res@lnRNA
if(F){
gene <- deg@deg%>%
arrange(desc(log2FoldChange))%>%
rownames_to_column("symbol")%>%
dplyr::slice(1:5)%>%
pull("symbol")
}else{
gene <- "METTL3,METTL14,METTL16,WTAP,VIRMA,RBM15,RBM15B,ZC3H13,FTO,ALKBH5,YTHDC1,YTHDC2,IGF2BP1,IGF2B,P2,IGF2BP3,YTHDF1,YTHDF2,YTHDF3,HNRNPC,HNRNPA2B1,RBMX"
gene <- strsplit(gene,split = ",")[[1]]
}
gene <- gene[gene %in% rownames(count@count)]
CoxSingle(clinical,count@count,gene)
coxMulti_res <- CoxMulti(clinical,count@count, gene)
